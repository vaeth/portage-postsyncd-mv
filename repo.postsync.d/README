# You can copy this file into /etc/portage/make.conf
# (It is also possible to turn /etc/portage/make.conf/ into a directory
# and to move this file and the original /etc/portage/make.conf there).
# Here variables are set which are used in /etc/portage/repo.postsync.d/*
# If the variables are not set, the default values in the comments are used

# The following variables are honoured by more tools than these scripts:

# Log errors/warnings?
# EINFO_LOG="no"

# Suppress warnings and info output?
# EINFO_QUIET="no"

# Suppress errors?
# EERROR_QUIET="no"

# Be extra verbose in output
# EINFO_VERBOSE="no"

# Suppress colors
# RC_NOCOLOR="no"

# Let portage be quiet if nonempty
# PORTAGE_QUIET=""

# The console type. Fetched by `consoletype` if empty.
# The type "serial" forces poor output
# CONSOLETYPE=""

# First the permissions of the repository directory are set.
# This is specified by a list of the form
# "repository dir_perm file_perm user group repository ..."
# The first matching repository is taken.
# The repository * means every repository except the main repository.
# The repository ** means every repository.
# dir_perm and file_perm should be octal values or non-numbers.
# If octal values, all dir/file permissions in the repository's directory
# are set correspodingly, respectively, if they differ.
# Analogously for user or group (which can be names or ids); an invalid
# user/group (e.g. "-") means that user/group is not modified.
# POSTSYNC_CHPERM="** 3755 0644 portage portage"

# The permissions which should be used to access the repositories.
# As soon as possible, permissions are dropped to the corresponding user.
# As a sanity check it is verified that the repository is writable by the user.
# The specification is given by a list of the form
# "repository user repository user ..."
# The first matching repository is taken.
# The repository * means every repository except the main repository.
# The repository ** means every repository.
# If the user is "root", no permissions are dropped, of course.
# A valid user _must_ be specified for every repository
# (add "** root" if you are not sure).
# POSTSYNC_REPO_USER="** portage"

# The path to the shell; default is `command -v sh` and if that fails:
# POSTSYNC_SHELL=/bin/sh

# The file which contains helper functions needed in most scripts
# POSTSYNC_FUNCTIONS="${PORTAGE_CONFIGROOT}/etc/portage/repo.postsync.d/portage-postsyncd-mv.sh"

# The name of the main repository:
# POSTSYNC_MAIN_REPOSITORY="gentoo"

# The name of the mirror from which the pre-generated cache is synced.
# Depending on your continent, the following choices might be reasonable:
# North America:
# POSTSYNC_SYNC="rsync://rsync.namerica.gentoo.org/gentoo-portage"
# South America:
# POSTSYNC_SYNC="rsync://rsync.samerica.gentoo.org/gentoo-portage"
# Europe:
# POSTSYNC_SYNC="rsync://rsync.europe.gentoo.org/gentoo-portage"
# Asia:
# POSTSYNC_SYNC="rsync://rsync.asia.gentoo.org/gentoo-portage"
# Australia:
# POSTSYNC_SYNC="rsync://rsync.au.gentoo.org/gentoo-portage"
# The default is
# POSTSYNC_SYNC="${SYNC}"
# If SYNC is empty or unset, the default is
# POSTSYNC_SYNC="rsync://rsync.gentoo.org/gentoo-portage"

# Extra options to be used when fetching metadata via rsync.
# If unspecified, the option -c is used: This option is useful when a lot of
# metadata is calculated locally, because the timestamps then usually differ,
# although it is usually not necessary to download these files.
# POSTSYNC_RSYNC_EXTRA_OPTS="-c"
# POSTSYNC_RSYNC_EXTRA_OPTS=""

# Timeout for rsync in seconds
# POSTSYNC_RSYNC_TIMEOUT="20"

# The minimal number of days between two fetchings of pre-calculated metadata
# (0 means never, and non-numerical values mean every time).
# Do not set it to a non-numerical value to avoid violating the gentoo policy
# which is to avoid fetching more often than once in 24 hours:
# Therefore, the value should be at least "1" (note that "0" can be considered
# as infinity and is ok as well), but not a non-number.
# However, the default is "2" to be gentle to the gentoo infrastructure.
# Note that fetching pre-generated metadata takes time and costs traffic,
# but if your last syncing is too old or if an often used eclass is changed,
# generating metadata can take *very* long, so that it is usually better to
# fetch in such a case; this is configured in subsequent variables.
# However, POSTSYNC_DAYS_FETCH_CACHE is honoured independently of any other
# configuration to enforce the gentoo policy.
# In the worst case, the metadata must be recalculated locally; there is some
# probability that this might be necessary anyway, since the precalculated data
# is often behind a recent eclass change (forcing a recalculation which might
# not yet have finished and reached the mirrors).
# POSTSYNC_DAYS_FETCH_CACHE="2"

# The minimal number of days between last metadata update/calculation
# and fetching of the pre-generated metadata cache for the main repository
# (0 means never, and non-numerical values mean every time).
# POSTSYNC_DAYS_CACHE="10"

# Independent of POSTSYNC_DAYS_CACHE, the cache is fetched if a file from
# the following list is younger than the timestamp file. The list is relative
# to the main repository, and it may contain wildcards. You might want to set
# POSTSYNC_COMPARE_LIST="eclass/*.eclass"
# unless you use the more sophisticated feature described below. Default:
# POSTSYNC_COMPARE_LIST=""

# In addition to POSTSYNC_COMPARE_LIST, the cache is fetched if a corresponding
# call of the eclasses.usage script (provided by this package) detects an
# eclass younger than the timestamp file and which is used at least the
# following number of times in ebuilds.
# Set this variable to a non-number (or empty) to switch off this feature.
# This feature is also disabled if eclass.usage is not an executable in $PATH
# POSTSYNC_ECLASSES_MIN="500"

# In case the pre-generated metadata cache for the main repository is fetched:
# Only fetch the data if the fetched data is presumably not older than this
# number of days
# (0 means fetch always, non-numerical values mean never)
# POSTSYNC_DAYS_CACHE_MAX="1"

# The minimal number of days between two calls of git-repack in the
# main repository (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_GIT_REPACK="7"

# The minimal number of days between two calls of git-repack in overlays
# (0 means never, and non-numerical values mean every time).
# This is a list of the form
# "repository days repository days ..."
# The repository * means every repository except the main repository.
# The repository ** means every repository.
# The first matching repository is taken; git-repack is omitted if none matches.
# It is not a good idea to specify the main repository here unless you disable
# the "normal" handling of git-repack for the main repository (the latter can
# be done e.g. by setting POSTSYNC_DAYS_GIT_REPACK=0), because otherwise
# git-repack might be called twice for the main repository.
# This feature uses the timestamp file ${repository_path}/.git/git-repack.date
# The default is taken unless you set it to a nonempty value
# (use e.g. POSTSYNC_DAYS_GIT_REPACK_REPO=" " to disable the feature).
# POSTSYNC_DAYS_GIT_REPACK_REPO="* 30"

# The number to use for --jobs when calling egencache.
# The empty value (default) means the number of processors.
# A non-numerical value means that no --jobs argument is passed.
# POSTSYNC_JOBS=""

# Skip generating the cache for these repositories.
# The value * means every repository besides the main repository.
# The value ** means every repository.
# The main repository is skipped if the sync address does not end with .git
# POSTSYNC_SKIP=""

# Extra arguments to pass to egencache. This is a list of the form
# "repository extraarg repository extraarg ..."
# repositories can be repeated.
# The repository * means every repository except the main repository.
# The repository ** means every repository.
# Typical examples:
# POSTSYNC_EGENCACHE=""
# POSTSYNC_EGENCACHE="${POSTSYNC_EGENCACHE} local --update-use-local-desc"
# POSTSYNC_EGENCACHE="${POSTSYNC_EGENCACHE} local --update-pkg-desc-index"
# POSTSYNC_EGENCACHE="${POSTSYNC_EGENCACHE} gentoo --update-pkg-desc-index"
# POSTSYNC_EGENCACHE="${POSTSYNC_EGENCACHE} mv --changelog-reversed"
# POSTSYNC_EGENCACHE="${POSTSYNC_EGENCACHE} mv --update-changelogs"
# The default is:
# POSTSYNC_EGENCACHE="mv --changelog-reversed mv --update-changelogs"

# This is prepended to POSTSYNC_EGENCACHE.
# Do not set it unless you want to _remove_ the defaults for some reason.
# Very likely you want to include at least "** --update" in this variable.
# POSTSYNC_EGENCACHE_DEFAULT="** --ignore-default-opts ** --update ** --tolerant
# ${POSTSYNC_MAIN_REPOSITORY} --update-use-local-desc"

# The minimal number of days before syncing glsa again
# (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_NEWS="1"

# How deep to clone the glsa git repository (0 or non-numeric is unlimited)
# POSTSYNC_DEPTH_NEWS="1"

# The URL of the glsa git repository
# POSTSYNC_URL_NEWS="https://anongit.gentoo.org/git/data/gentoo-news.git"

# How often removing metadata/news and retrying git in case of failure
# POSTSYNC_RETRY_NEWS="1"

# Whether to keep partial metadata/news if all retries failed.
# Can be "yes", "no", or "never". The latter means removal even if fetch failed
# POSTSYNC_KEEP_NEWS="no"

# The minimal number of days before syncing glsa again
# (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_GLSA="2"

# How deep to clone the glsa git repository (0 or non-numeric is unlimited)
# POSTSYNC_DEPTH_GLSA="1"

# The URL of the glsa git repository
# POSTSYNC_URL_GLSA="https://anongit.gentoo.org/git/data/glsa.git"

# How often removing metadata/glsa and retrying git in case of failure
# POSTSYNC_RETRY_GLSA="1"

# Whether to keep partial metadata/glsa if all retries failed
# Can be "yes", "no", or "never". The latter means removal even if fetch failed
# POSTSYNC_KEEP_GLSA="no"

# The minimal number of days before syncing xml-schema again
# (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_XML_SCHEMA="30"

# How deep to clone the xml-schema git repository
# (0 or non-numeric is unlimited)
# POSTSYNC_DEPTH_XML_SCHEMA="1"

# The URL of the xml-schema git repository
# POSTSYNC_URL_XML_SCHEMA="https://anongit.gentoo.org/git/data/xml-schema.git"

# How often removing metadata/xml-schema and retrying git in case of failure
# POSTSYNC_RETRY_XML_SCHEMA="1"

# Whether to keep partial metadata/xml-schema if all retries failed
# Can be "yes", "no", or "never". The latter means removal even if fetch failed
# POSTSYNC_KEEP_XML_SCHEMA="no"

# The minimal number of days before syncing dtd again
# (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_DTD="30"

# How deep to clone the dtd git repository (0 or non-numeric is unlimited)
# POSTSYNC_DEPTH_DTD="1"

# The URL of the dtd git repository
# POSTSYNC_URL_DTD="https://anongit.gentoo.org/git/data/dtd.git"

# How often removing metadata/dtd and retrying git in case of failure
# POSTSYNC_RETRY_DTD="1"

# Whether to keep partial metadata/dtd if all retries failed
# Can be "yes", "no", or "never". The latter means removal even if fetch failed
# POSTSYNC_KEEP_DTD="no"

# The minimal number of days before syncing projects.xml again
# (0 means never, and non-numerical values mean every time)
# POSTSYNC_DAYS_PROJECTS_XML="30"

# The URL of the projects.xml file:
# POSTSYNC_URL_PROJECTS_XML="https://api.gentoo.org/metastructure/projects.xml"
